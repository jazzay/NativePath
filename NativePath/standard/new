#ifndef new_hpp
#define new_hpp

#include "../NativePath.h"

#ifdef __cplusplus
//C++ utility

//standard placement form of new
inline void* operator new(size_t _Size, void* _Where) throw()
{
	(void)_Size;
	return _Where;
}

inline void operator delete(void*, void*) throw()
{
	return;
}

inline void* operator new[](size_t _Size, void* _Where) throw()
{
	(void)_Size;
	return _Where;
}

inline void operator delete[](void*, void*) throw()
{
}

namespace std {
	inline namespace __1
	{
		static inline void* __allocate(size_t size)
		{
		   return __builtin_operator_new(size);
		}
		
		static inline void __libcpp_deallocate(void* ptr)
		{
		   return __builtin_operator_delete(ptr);
		}
	}
	struct nothrow_t {};
	extern const nothrow_t nothrow;
}

inline void* operator new(size_t _Size, std::nothrow_t _Where)
{
	return __builtin_operator_new(_Size);
}
#endif

#endif